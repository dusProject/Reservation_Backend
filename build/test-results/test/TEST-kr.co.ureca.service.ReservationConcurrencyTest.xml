<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="kr.co.ureca.service.ReservationConcurrencyTest" tests="1" skipped="0" failures="0" errors="0" timestamp="2024-09-30T15:18:09" hostname="igayeon-ui-MacBookAir.local" time="0.351">
  <properties/>
  <testcase name="testConcurrentReservations()" classname="kr.co.ureca.service.ReservationConcurrencyTest" time="0.351"/>
  <system-out><![CDATA[00:18:06.644 [Test worker] INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils -- Could not detect default configuration classes for test class [kr.co.ureca.service.ReservationConcurrencyTest]: ReservationConcurrencyTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
00:18:06.681 [Test worker] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper -- Found @SpringBootConfiguration kr.co.ureca.MiniProjectBeApplication for test class kr.co.ureca.service.ReservationConcurrencyTest

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::                (v3.2.9)

2024-10-01T00:18:06.818+09:00  INFO 13845 --- [Mini-Project_BE] [    Test worker] k.c.u.s.ReservationConcurrencyTest       : Starting ReservationConcurrencyTest using Java 17.0.12 with PID 13845 (started by dlrkdus in /Users/dlrkdus/Documents/GitHub/Reservation_Backend)
2024-10-01T00:18:06.819+09:00  INFO 13845 --- [Mini-Project_BE] [    Test worker] k.c.u.s.ReservationConcurrencyTest       : No active profile set, falling back to 1 default profile: "default"
2024-10-01T00:18:07.212+09:00  INFO 13845 --- [Mini-Project_BE] [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-10-01T00:18:07.213+09:00  INFO 13845 --- [Mini-Project_BE] [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2024-10-01T00:18:07.225+09:00  INFO 13845 --- [Mini-Project_BE] [    Test worker] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface kr.co.ureca.repository.SeatRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2024-10-01T00:18:07.225+09:00  INFO 13845 --- [Mini-Project_BE] [    Test worker] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface kr.co.ureca.repository.UserRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2024-10-01T00:18:07.225+09:00  INFO 13845 --- [Mini-Project_BE] [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 11 ms. Found 0 JDBC repository interfaces.
2024-10-01T00:18:07.229+09:00  INFO 13845 --- [Mini-Project_BE] [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-10-01T00:18:07.230+09:00  INFO 13845 --- [Mini-Project_BE] [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-10-01T00:18:07.318+09:00  INFO 13845 --- [Mini-Project_BE] [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 86 ms. Found 2 JPA repository interfaces.
2024-10-01T00:18:07.325+09:00  INFO 13845 --- [Mini-Project_BE] [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-10-01T00:18:07.325+09:00  INFO 13845 --- [Mini-Project_BE] [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-10-01T00:18:07.330+09:00  INFO 13845 --- [Mini-Project_BE] [    Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface kr.co.ureca.repository.SeatRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-10-01T00:18:07.330+09:00  INFO 13845 --- [Mini-Project_BE] [    Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface kr.co.ureca.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-10-01T00:18:07.330+09:00  INFO 13845 --- [Mini-Project_BE] [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 2 ms. Found 0 Redis repository interfaces.
2024-10-01T00:18:07.574+09:00  INFO 13845 --- [Mini-Project_BE] [    Test worker] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-10-01T00:18:07.595+09:00  INFO 13845 --- [Mini-Project_BE] [    Test worker] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.4.10.Final
2024-10-01T00:18:07.608+09:00  INFO 13845 --- [Mini-Project_BE] [    Test worker] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-10-01T00:18:07.683+09:00  INFO 13845 --- [Mini-Project_BE] [    Test worker] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-10-01T00:18:07.695+09:00  INFO 13845 --- [Mini-Project_BE] [    Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-10-01T00:18:07.811+09:00  INFO 13845 --- [Mini-Project_BE] [    Test worker] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@7c2e88b9
2024-10-01T00:18:07.812+09:00  INFO 13845 --- [Mini-Project_BE] [    Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-10-01T00:18:08.142+09:00  INFO 13845 --- [Mini-Project_BE] [    Test worker] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
Hibernate: 
    alter table seat 
       drop 
       foreign key FKe6phj7o3jw3cwn0egv9i4v3ma
Hibernate: 
    drop table if exists seat
Hibernate: 
    drop table if exists user
Hibernate: 
    create table seat (
        status bit,
        seat_id bigint not null auto_increment,
        seat_no bigint,
        user_id bigint,
        primary key (seat_id)
    ) engine=InnoDB
Hibernate: 
    create table user (
        has_reservation bit,
        user_id bigint not null auto_increment,
        nickname varchar(255),
        password varchar(255),
        user_name varchar(255),
        primary key (user_id)
    ) engine=InnoDB
Hibernate: 
    alter table seat 
       add constraint UK_spqt2dd33urk1ekgy26631j5m unique (user_id)
Hibernate: 
    alter table user 
       add constraint UK_n4swgcf30j6bmtb4l4cjryuym unique (nickname)
Hibernate: 
    alter table seat 
       add constraint FKe6phj7o3jw3cwn0egv9i4v3ma 
       foreign key (user_id) 
       references user (user_id)
2024-10-01T00:18:08.190+09:00  INFO 13845 --- [Mini-Project_BE] [    Test worker] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-10-01T00:18:08.416+09:00  INFO 13845 --- [Mini-Project_BE] [    Test worker] org.redisson.Version                     : Redisson 3.18.0
2024-10-01T00:18:08.426+09:00  WARN 13845 --- [Mini-Project_BE] [    Test worker] i.n.r.d.DnsServerAddressStreamProviders  : Can not find io.netty.resolver.dns.macos.MacOSDnsServerAddressStreamProvider in the classpath, fallback to system defaults. This may result in incorrect DNS resolutions on MacOS. Check whether you have a dependency on 'io.netty:netty-resolver-dns-native-macos'
2024-10-01T00:18:08.486+09:00  INFO 13845 --- [Mini-Project_BE] [isson-netty-2-6] o.r.c.pool.MasterPubSubConnectionPool    : 1 connections initialized for localhost/127.0.0.1:6379
2024-10-01T00:18:08.510+09:00  INFO 13845 --- [Mini-Project_BE] [sson-netty-2-20] o.r.c.pool.MasterConnectionPool          : 24 connections initialized for localhost/127.0.0.1:6379
Hibernate: 
    select
        count(*) 
    from
        seat s1_0
Hibernate: 
    insert 
    into
        seat
        (seat_no, status, user_id) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        seat
        (seat_no, status, user_id) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        seat
        (seat_no, status, user_id) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        seat
        (seat_no, status, user_id) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        seat
        (seat_no, status, user_id) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        seat
        (seat_no, status, user_id) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        seat
        (seat_no, status, user_id) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        seat
        (seat_no, status, user_id) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        seat
        (seat_no, status, user_id) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        seat
        (seat_no, status, user_id) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        seat
        (seat_no, status, user_id) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        seat
        (seat_no, status, user_id) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        seat
        (seat_no, status, user_id) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        seat
        (seat_no, status, user_id) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        seat
        (seat_no, status, user_id) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        seat
        (seat_no, status, user_id) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        seat
        (seat_no, status, user_id) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        seat
        (seat_no, status, user_id) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        seat
        (seat_no, status, user_id) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        seat
        (seat_no, status, user_id) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        seat
        (seat_no, status, user_id) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        seat
        (seat_no, status, user_id) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        seat
        (seat_no, status, user_id) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        seat
        (seat_no, status, user_id) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        seat
        (seat_no, status, user_id) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        seat
        (seat_no, status, user_id) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        seat
        (seat_no, status, user_id) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        seat
        (seat_no, status, user_id) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        seat
        (seat_no, status, user_id) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        seat
        (seat_no, status, user_id) 
    values
        (?, ?, ?)
2024-10-01T00:18:08.725+09:00  INFO 13845 --- [Mini-Project_BE] [    Test worker] kr.co.ureca.service.ReservationService   : 좌석을 생성했습니다.
2024-10-01T00:18:09.019+09:00  WARN 13845 --- [Mini-Project_BE] [    Test worker] ion$DefaultTemplateResolverConfiguration : Cannot find template location: classpath:/templates/ (please add some templates, check your Thymeleaf configuration, or set spring.thymeleaf.check-template-location=false)
2024-10-01T00:18:09.292+09:00  INFO 13845 --- [Mini-Project_BE] [    Test worker] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 1 endpoint(s) beneath base path '/actuator'
2024-10-01T00:18:09.327+09:00  INFO 13845 --- [Mini-Project_BE] [    Test worker] k.c.u.s.ReservationConcurrencyTest       : Started ReservationConcurrencyTest in 2.602 seconds (process running for 2.99)
Hibernate: 
    select
        count(*) 
    from
        user u1_0
Hibernate: 
    insert 
    into
        user
        (has_reservation, nickname, password, user_name) 
    values
        (?, ?, ?, ?)
Hibernate: 
    insert 
    into
        user
        (has_reservation, nickname, password, user_name) 
    values
        (?, ?, ?, ?)
Hibernate: 
    insert 
    into
        user
        (has_reservation, nickname, password, user_name) 
    values
        (?, ?, ?, ?)
Hibernate: 
    insert 
    into
        user
        (has_reservation, nickname, password, user_name) 
    values
        (?, ?, ?, ?)
Hibernate: 
    insert 
    into
        user
        (has_reservation, nickname, password, user_name) 
    values
        (?, ?, ?, ?)
Hibernate: 
    insert 
    into
        user
        (has_reservation, nickname, password, user_name) 
    values
        (?, ?, ?, ?)
Hibernate: 
    insert 
    into
        user
        (has_reservation, nickname, password, user_name) 
    values
        (?, ?, ?, ?)
Hibernate: 
    insert 
    into
        user
        (has_reservation, nickname, password, user_name) 
    values
        (?, ?, ?, ?)
Hibernate: 
    insert 
    into
        user
        (has_reservation, nickname, password, user_name) 
    values
        (?, ?, ?, ?)
Hibernate: 
    insert 
    into
        user
        (has_reservation, nickname, password, user_name) 
    values
        (?, ?, ?, ?)
2024-10-01T00:18:09.635+09:00 ERROR 13845 --- [Mini-Project_BE] [ool-3-thread-10] k.c.u.s.ReservationConcurrencyTest       : Failed for user 10: Lock 확보에 실패했습니다.
2024-10-01T00:18:09.635+09:00 ERROR 13845 --- [Mini-Project_BE] [pool-3-thread-1] k.c.u.s.ReservationConcurrencyTest       : Failed for user 1: Lock 확보에 실패했습니다.
2024-10-01T00:18:09.635+09:00 ERROR 13845 --- [Mini-Project_BE] [pool-3-thread-7] k.c.u.s.ReservationConcurrencyTest       : Failed for user 7: Lock 확보에 실패했습니다.
2024-10-01T00:18:09.635+09:00 ERROR 13845 --- [Mini-Project_BE] [pool-3-thread-5] k.c.u.s.ReservationConcurrencyTest       : Failed for user 5: Lock 확보에 실패했습니다.
2024-10-01T00:18:09.636+09:00 ERROR 13845 --- [Mini-Project_BE] [pool-3-thread-8] k.c.u.s.ReservationConcurrencyTest       : Failed for user 8: Lock 확보에 실패했습니다.
2024-10-01T00:18:09.635+09:00 ERROR 13845 --- [Mini-Project_BE] [pool-3-thread-3] k.c.u.s.ReservationConcurrencyTest       : Failed for user 3: Lock 확보에 실패했습니다.
2024-10-01T00:18:09.636+09:00 ERROR 13845 --- [Mini-Project_BE] [pool-3-thread-6] k.c.u.s.ReservationConcurrencyTest       : Failed for user 6: Lock 확보에 실패했습니다.
2024-10-01T00:18:09.635+09:00 ERROR 13845 --- [Mini-Project_BE] [pool-3-thread-4] k.c.u.s.ReservationConcurrencyTest       : Failed for user 4: Lock 확보에 실패했습니다.
2024-10-01T00:18:09.636+09:00 ERROR 13845 --- [Mini-Project_BE] [pool-3-thread-2] k.c.u.s.ReservationConcurrencyTest       : Failed for user 2: Lock 확보에 실패했습니다.
2024-10-01T00:18:09.643+09:00  WARN 13845 --- [Mini-Project_BE] [pool-3-thread-9] org.hibernate.orm.deprecation            : HHH90000021: Encountered deprecated setting [javax.persistence.lock.timeout], use [jakarta.persistence.lock.timeout] instead
Hibernate: 
    select
        s1_0.seat_id,
        s1_0.seat_no,
        s1_0.status,
        s1_0.user_id 
    from
        seat s1_0 
    where
        s1_0.seat_no=? for update
Hibernate: 
    select
        u1_0.user_id,
        u1_0.has_reservation,
        u1_0.nickname,
        u1_0.password,
        u1_0.user_name 
    from
        user u1_0 
    where
        u1_0.user_id=?
2024-10-01T00:18:09.677+09:00  INFO 13845 --- [Mini-Project_BE] [pool-3-thread-9] kr.co.ureca.service.ReservationService   : User in Seat after saving: User9
Hibernate: 
    update
        seat 
    set
        seat_no=?,
        status=?,
        user_id=? 
    where
        seat_id=?
Hibernate: 
    update
        user 
    set
        has_reservation=?,
        nickname=?,
        password=?,
        user_name=? 
    where
        user_id=?
2024-10-01T00:18:09.697+09:00  INFO 13845 --- [Mini-Project_BE] [pool-3-thread-9] k.c.u.s.ReservationConcurrencyTest       : Success for user 9
CustomException (LOCK_ACQUISITION_FAILED): Lock 확보에 실패했습니다.
CustomException (LOCK_ACQUISITION_FAILED): Lock 확보에 실패했습니다.
CustomException (LOCK_ACQUISITION_FAILED): Lock 확보에 실패했습니다.
CustomException (LOCK_ACQUISITION_FAILED): Lock 확보에 실패했습니다.
CustomException (LOCK_ACQUISITION_FAILED): Lock 확보에 실패했습니다.
CustomException (LOCK_ACQUISITION_FAILED): Lock 확보에 실패했습니다.
CustomException (LOCK_ACQUISITION_FAILED): Lock 확보에 실패했습니다.
CustomException (LOCK_ACQUISITION_FAILED): Lock 확보에 실패했습니다.
Success
CustomException (LOCK_ACQUISITION_FAILED): Lock 확보에 실패했습니다.
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
